// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: query.sql

package sqlite

import (
	"context"
)

const getAlbum = `-- name: GetAlbum :one
SELECT albumid, title, artistid FROM Album
WHERE AlbumId=?
`

func (q *Queries) GetAlbum(ctx context.Context, albumid int64) (Album, error) {
	row := q.db.QueryRowContext(ctx, getAlbum, albumid)
	var i Album
	err := row.Scan(&i.Albumid, &i.Title, &i.Artistid)
	return i, err
}

const listAlbums = `-- name: ListAlbums :many
SELECT albumid, title, artistid FROM Album
`

func (q *Queries) ListAlbums(ctx context.Context) ([]Album, error) {
	rows, err := q.db.QueryContext(ctx, listAlbums)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Album
	for rows.Next() {
		var i Album
		if err := rows.Scan(&i.Albumid, &i.Title, &i.Artistid); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
